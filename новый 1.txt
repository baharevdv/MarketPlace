Для реализации описанного функционала взаимодействие компонентов можно построить следующим образом:

Когда пользователь выбирает товар для покупки, Frontend приложение отправляет запрос к Backend приложению, содержащий информацию о товаре и желание приобрести его.

Backend приложение проверяет наличие товара на складе в БД MySQL. Если товар отсутствует, Backend приложение сохраняет информацию о желании пользователя подписаться на уведомление о поступлении товара на склад. Для этого может быть создана новая таблица "Подписки на уведомления" со следующими полями:
Идентификатор подписки (ID)
Идентификатор пользователя (UserID)
Идентификатор товара (ProductID)
Дата создания подписки (CreatedAt)

Когда товар поступает на склад, используется Apache Kafka для отправки события о поступлении товара на склад. Kafka-топик "Поступление товара"(или по другому как-то назвать).

Компонент, ответственный за уведомления, подписывается на Kafka-топик "Поступление товара" и получает события о поступлении товара на склад.

При получении события о поступлении товара, компонент уведомлений (например, отдельный микросервис или часть Backend приложения) обрабатывает это событие и выполняет следующие действия:
Проверяет подписки пользователей на товар, для которого поступило уведомление.
Если есть активные подписки, компонент уведомлений создает запись уведомления в БД MySQL в таблице "Уведомления" со следующими полями:
Идентификатор уведомления (NotificationID)
Идентификатор пользователя (UserID)
Идентификатор товара (ProductID)
Дата создания уведомления (CreatedAt)
Статус уведомления (Status) - по умолчанию "unread" (непрочитанное)

Когда пользователь заходит в свой личный кабинет, Frontend приложение отправляет запрос на получение списка уведомлений для текущего пользователя.

Backend приложение получает запрос на получение списка уведомлений и извлекает данные из таблицы "Уведомления" для данного пользователя. Backend приложение отправляет данные об уведомлениях в ответ на запрос.

Когда пользователь просматривает уведомление в личном кабинете, Frontend приложение отправляет запрос на обновление статуса уведомления с "unread" на "read" (непрочитанное на прочитанное).

Backend приложение получает запрос на обновление статуса уведомления и обновляет соответствующую запись в таблице "Уведомления" в БД MySQL, устанавливая статус уведомления на "read" для данного пользователя.

Пользователь видит обновленный статус уведомления в своем личном кабинете, что указывает на то, что он прочитал уведомление.